# Generated by Django 3.2.4 on 2021-06-21 14:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import home.RichTextBleachField


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", home.RichTextBleachField.RichTextBleachField(default="")),
                (
                    "publish_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("is_edited", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("book_name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50)),
                (
                    "content",
                    home.RichTextBleachField.RichTextBleachField(blank=True, null=True),
                ),
                (
                    "publish_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "grade",
                    models.CharField(
                        choices=[
                            ("7", "Seventh Grade"),
                            ("8", "Eighth grade"),
                            ("9", "Ninth grade"),
                            ("10", "Tenth grade"),
                            ("11", "Eleventh grade"),
                            ("12", "Twelfth grade"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "book_page",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(999),
                        ],
                    ),
                ),
                ("is_edited", models.BooleanField(default=False)),
                (
                    "book",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="home.book",
                    ),
                ),
            ],
            options={
                "ordering": ["-publish_date"],
            },
        ),
        migrations.CreateModel(
            name="Question_Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_ID",
                        to="home.question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject_name", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_name", models.CharField(max_length=20)),
                (
                    "questions",
                    models.ManyToManyField(
                        through="home.Question_Tag", to="home.Question"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sub_Subject",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sub_subject_name", models.CharField(max_length=100)),
                (
                    "related_subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="home.subject"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="question_tag",
            name="tag",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tag_ID",
                to="home.tag",
            ),
        ),
    ]
